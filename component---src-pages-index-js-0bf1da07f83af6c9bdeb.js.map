{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/image.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./node_modules/core-js/modules/es6.string.fixed.js","webpack:///./node_modules/core-js/modules/_string-html.js"],"names":["query","IndexPage","_ref","data","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","style","width","display","alignItems","flexWrap","justifyContent","map","allMarkdownRemark","edges","_ref2","node","padding","position","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","path","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fixed","frontmatter","cover_image","childImageSharp","top","left","transform","fontWeight","fontSize","color","short_title","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Image","fluid","placeholderImage","_public_static_d_2977595066_json__WEBPACK_IMPORTED_MODULE_0__","SEO","description","lang","meta","keywords","title","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","siteDescription","topics","react_default","minWidth","maxWidth","flexDirection","margin","components_image","gatsby_browser_entry","textDecoration","v","k","marginTop","href","Layout","className","seo","header","reduce","group","acc","_Object$assign","fieldValue","totalCount","_717042296","createHTML","this","$export","fails","defined","quot","tag","attribute","value","S","String","p1","replace","NAME","exec","O","P","F","test","toLowerCase","split"],"mappings":"6MAuDaA,UAAK,aA0BHC,UAzEG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChBC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OACEE,MAAO,CACLC,MAAK,OACLC,QAAO,OACPC,WAAU,aACVC,SAAQ,OACRC,eAAc,eAIdC,cACEX,EAAKY,kBAAkBC,MACvB,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAF,OACEd,EAAAC,EAAAC,cAAA,OACEE,MAAO,CACLW,QAAO,gBACPC,SAAQ,aAGVhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEC,GAAIJ,EAAKK,OAAOC,MAEhBpB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAKqB,MAAOR,EAAKS,YAAYC,YAAYC,gBAAgBH,QACzDtB,EAAAC,EAAAC,cAAA,OACEE,MAAO,CACLY,SAAQ,WACRU,IAAG,MACHC,KAAI,MACJC,UAAS,wBACTC,WAAU,MACVC,SAAQ,MACRC,MAAK,UAGNjB,EAAKS,YAAYS,sDC5CpCC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAA1C,IAAAgC,EAAA,SAaMW,EAAqBC,IAAMC,cAAc,IAEzCV,EAAc,SAAAW,GAAK,OACvBT,EAAArC,EAAAC,cAAC0C,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAMhD,MACLkD,EAAgBF,EAAMnD,QAAUqD,EAAgBF,EAAMnD,OAAOG,MAEtDgD,EAAMG,QAAUH,EAAMI,UAC5BJ,EAAMhD,KAAOgD,EAAMhD,KAAKA,KAAOkD,EAAgBF,EAAMnD,OAAOG,MAGvDuC,EAAArC,EAAAC,cAAA,uCA4BfkC,EAAYgB,UAAY,CACtBrD,KAAMsD,IAAUC,OAChB1D,MAAOyD,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,2BC1DtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,4FC+BhCK,IAhBD,SAAAjE,GAAA,IAAEM,EAAFN,EAAEM,MAAF,OACZJ,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACErB,MAAK,aAWLsD,OAAQ,SAAAnD,GAAI,OAAIC,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAKG,MAAOA,EAAO4D,MAAOjE,EAAKkE,iBAAiBxC,gBAAgBuC,SAZlFjE,KAAAmE,sGCJF,SAASC,EAATrE,GAA2D,IAA5CsE,EAA4CtE,EAA5CsE,YAAaC,EAA+BvE,EAA/BuE,KAAMC,EAAyBxE,EAAzBwE,KAAMC,EAAmBzE,EAAnByE,SAAUC,EAAS1E,EAAT0E,MACxCC,EADiDC,EAAA3E,KACjD0E,KAcFE,EAAkBP,GAAeK,EAAKG,aAAaR,YAEzD,OACEpE,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CACE6E,eAAgB,CACdT,QAEFG,MAAOA,EACPO,cAAa,QAAUN,EAAKG,aAAaJ,MACzCF,KAAM,CACJ,CACEU,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAAST,GAEX,CACEU,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKG,aAAaO,QAE7B,CACEH,KAAI,gBACJC,QAAST,GAEX,CACEQ,KAAI,sBACJC,QAASN,IAGVS,OACCb,EAASc,OAAS,EACd,CACEL,KAAI,WACJC,QAASV,EAASe,KAAT,OAEX,IAELF,OAAOd,KAKhBH,EAAIoB,aAAe,CACjBlB,KAAI,KACJC,KAAM,GACNC,SAAU,GACVH,YAAW,IAGbD,EAAIf,UAAY,CACdgB,YAAaf,IAAUE,OACvBc,KAAMhB,IAAUE,OAChBe,KAAMjB,IAAUmC,QAAQnC,IAAUC,QAClCiB,SAAUlB,IAAUmC,QAAQnC,IAAUE,QACtCiB,MAAOnB,IAAUE,OAAOC,YAGXW,qYC5FTsB,EAAmB,SAAA3F,GAAkB,IAAf4F,EAAe5F,EAAf4F,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIE9C,IAAM3C,cAAc6F,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXT,EAAiBrC,UAAY,CAC3BsC,SAAUrC,IAAU8C,MAAM,CACxBL,SAAUzC,IAAUE,OAAOC,aAC1BA,YAGUiC,kmFCnBTW,EAAS,SAAAtG,GAAA,IAAGuG,EAAHvG,EAAGuG,UAAWC,EAAdxG,EAAcwG,gBAAiBC,EAA/BzG,EAA+ByG,OAA/B,OACbC,EAAAvG,EAAAC,cAAA,OACEE,MAAO,CACLqG,SAAQ,MACRC,SAAQ,MAERpG,QAAO,OACPqG,cAAa,SACbpG,WAAU,WAGZiG,EAAAvG,EAAAC,cAAA,OACEE,MAAO,CACLwG,OAAM,SACN7F,QAAO,oBACPT,QAAO,OACPqG,cAAa,SACbpG,WAAU,WAGZiG,EAAAvG,EAAAC,cAAC2G,EAAA,EAAD,CAAOzG,MAAO,CAACC,MAAO,OACtBmG,EAAAvG,EAAAC,cAAA,MAAIE,MAAO,CAAEwG,OAAQ,IACnBJ,EAAAvG,EAAAC,cAAC4G,EAAA,EAAD,CACE5F,GAAG,IACHd,MAAO,CACL2B,MAAK,2BACLgF,eAAc,SAGfV,KAIPG,EAAAvG,EAAAC,cAAA,OACEE,MAAO,CACLC,MAAK,OACLU,QAAO,YACPT,QAAO,OACPqG,cAAa,SACb7E,SAAQ,UAGV0E,EAAAvG,EAAAC,cAAA,OACEE,MAAO,CACLwG,OAAM,cAGPN,GAEHE,EAAAvG,EAAAC,cAAA,OACEE,MAAO,CACLwG,OAAM,cAINlG,cACE6F,EACA,SAACS,EAAGC,GAAJ,OACET,EAAAvG,EAAAC,cAAA,WAAM+G,EAAN,IAAUD,EAAV,SAOTR,EAAAvG,EAAAC,cAAA,UAAQE,MAAO,CAAC8G,UAAS,SACxBV,EAAAvG,EAAAC,cAAA,KAAGE,MAAO,CAAC2G,eAAc,OAAUjF,SAAQ,SACxCqF,KAAK,yBADR,sBAONf,EAAOhD,UAAY,CACjBiD,UAAWhD,IAAUE,OACrB+C,gBAAiBjD,IAAUE,QAG7B6C,EAAOb,aAAe,CACpBc,UAAS,GACTC,gBAAe,OAIFF,iBC1ETgB,UAAS,SAAAtH,GAAA,IAAGqD,EAAHrD,EAAGqD,SAAH,OACbqD,EAAAvG,EAAAC,cAAC4G,EAAA,EAAD,CACElH,MAAK,YAgBLsD,OAAQ,SAAAnD,GAAI,OACVyG,EAAAvG,EAAAC,cAAA,OAAKmH,UAAU,WACbb,EAAAvG,EAAAC,cAACoH,EAAA,EAAD,CAAK9C,MAAM,MAAMD,SAAU,qCAC3BiC,EAAAvG,EAAAC,cAACqH,EAAD,CACElB,UAAWtG,EAAK0E,KAAKG,aAAaJ,MAClC8B,gBAAiBvG,EAAK0E,KAAKG,aAAaR,YACvCmC,OAAQiB,iBAAOzH,EAAKY,kBAAkB8G,MAAO,SAACC,EAAKV,GAAN,IAAAW,EAAA,OAAA3B,OAAAC,OAAA,GAAiByB,IAAjBC,EAAA,IAAuBX,EAAEY,YAAaZ,EAAEa,WAAxCF,KAAsD,MAEtGnB,EAAAvG,EAAAC,cAAA,OACEE,MAAO,CACLW,QAAO,YACPV,MAAK,SAGN8C,KA/BTpD,KAAA+H,MAsCFV,EAAOhE,UAAY,CACjBD,SAAUE,IAAUvC,KAAK0C,YAGZ4D,wCCzDfnF,EAAQ,IAARA,CAAwB,iBAAA8F,GACxB,kBACA,OAAAA,EAAAC,KAAA,oCCJA,IAAAC,EAAchG,EAAQ,IACtBiG,EAAYjG,EAAQ,IACpBkG,EAAclG,EAAQ,IACtBmG,EAAA,KAEAL,EAAA,SAAAxE,EAAA8E,EAAAC,EAAAC,GACA,IAAAC,EAAAC,OAAAN,EAAA5E,IACAmF,EAAA,IAAAL,EAEA,MADA,KAAAC,IAAAI,GAAA,IAAAJ,EAAA,KAAAG,OAAAF,GAAAI,QAAAP,EAAA,UAA0F,KAC1FM,EAAA,IAAAF,EAAA,KAAAH,EAAA,KAEA1E,EAAAC,QAAA,SAAAgF,EAAAC,GACA,IAAAC,EAAA,GACAA,EAAAF,GAAAC,EAAAd,GACAE,IAAAc,EAAAd,EAAAe,EAAAd,EAAA,WACA,IAAAe,EAAA,GAAAL,GAAA,KACA,OAAAK,MAAAC,eAAAD,EAAAE,MAAA,KAAA9D,OAAA,IACG,SAAAyD","file":"component---src-pages-index-js-0bf1da07f83af6c9bdeb.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Img from 'gatsby-image'\nimport {map} from 'lodash'\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <div\n      style={{\n        width: `100%`,\n        display: `flex`,\n        alignItems: `flex-start`,\n        flexWrap: `wrap`,\n        justifyContent: `flex-start`,\n      }}\n    >\n      {\n        map(\n          data.allMarkdownRemark.edges,\n          ({node}) => (\n            <div\n              style={{\n                padding: `0.5rem 0.5rem`,\n                position: `relative`,\n              }}\n            >\n              <Link\n                to={node.fields.path}\n              >\n                <Img fixed={node.frontmatter.cover_image.childImageSharp.fixed}/>\n                <div\n                  style={{\n                    position: `absolute`,\n                    top: `50%`,\n                    left: `50%`,\n                    transform: `translate(-50%, -50%)`,\n                    fontWeight: `700`,\n                    fontSize: `2em`,\n                    color: `white`,\n                  }}\n                >\n                  {node.frontmatter.short_title}\n                </div>\n              </Link>\n            </div>\n          )\n        )\n      }\n    </div>\n  </Layout>  \n)\n\nexport const query = graphql`\n  query PostThumbnailQuery {\n    allMarkdownRemark {\n      edges {\n        node {\n          fields {\n            path\n          }\n          frontmatter {\n            title\n            short_title\n            cover_image {\n              publicURL\n              childImageSharp {\n                fixed(width: 200, height: 200) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = ({style}) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"boom.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img style={style} fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport {map} from \"lodash\"\nimport Image from \"./image\"\n\nconst Header = ({ siteTitle, siteDescription, topics }) => (\n  <div\n    style={{\n      minWidth: `20%`,\n      maxWidth: `25%`,\n      /* borderRight: `2px dotted hsla(0.9, 50%, 50%, 0.3)`, */\n      display: `flex`,\n      flexDirection: `column`,\n      alignItems: `center`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        padding: `1.45rem 1.0875rem`,\n        display: `flex`,\n        flexDirection: `column`,\n        alignItems: `center`\n      }}\n    >\n      <Image style={{width: 170}}/>\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `hsla(305, 100%, 80%, .5)`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n    <div\n      style={{\n        width: `100%`,\n        padding: `1rem 2rem`,\n        display: `flex`,\n        flexDirection: `column`,\n        fontSize: `0.9em`,\n      }}\n    >\n      <div\n        style={{\n          margin: `1rem 0rem`,\n        }}\n      >\n        {siteDescription}\n      </div>\n      <div\n        style={{\n          margin: `1rem 0rem`,\n        }}\n      >\n        {\n          map(\n            topics,\n            (v, k) => (\n              <div>{k}({v})</div>\n            )\n          )\n        }\n      </div>\n    </div>\n\n     <footer style={{marginTop: `auto`}}>\n      <a style={{textDecoration: `none`, fontSize: `0.8em`}}\n         href=\"https://polygon.pizza\">polygon ♥ pizza\n      </a>\n    </footer>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  siteDescription: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  siteDescription: `...`,\n}\n\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport {reduce} from 'lodash'\n\nimport Header from \"./header\"\nimport SEO from \"./seo\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n        allMarkdownRemark(limit: 2000) {\n          group(field: frontmatter___tags) {\n            fieldValue\n            totalCount\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"content\">\n        <SEO title=\"p_p\" keywords={[`music`, `programming`, `nonsense`]} />\n        <Header\n          siteTitle={data.site.siteMetadata.title}\n          siteDescription={data.site.siteMetadata.description}\n           topics={reduce(data.allMarkdownRemark.group, (acc, v) => ({...acc, [v.fieldValue]: v.totalCount}), {})}\n        />\n        <div\n          style={{\n            padding: `1rem 1rem`,\n            width: `100%`,\n          }}\n        >\n          {children}\n        </div>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n"],"sourceRoot":""}