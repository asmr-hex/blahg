{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/image.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_ref","post","data","markdownRemark","a","createElement","frontmatter","title","dangerouslySetInnerHTML","__html","html","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Image","style","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fluid","placeholderImage","childImageSharp","_public_static_d_2977595066_json__WEBPACK_IMPORTED_MODULE_0__","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","siteDescription","topics","react_default","minWidth","maxWidth","display","flexDirection","alignItems","margin","padding","components_image","width","gatsby_browser_entry","to","color","textDecoration","fontSize","map","v","k","marginTop","href","Layout","className","seo","header","reduce","allMarkdownRemark","group","acc","_Object$assign","fieldValue","totalCount","_717042296","node"],"mappings":"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","file":"component---src-templates-post-js-7e171d6e82319feb5844.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  return (\n    <Layout>\n      <div>\n        <h1>{post.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($path: String!) {\n    markdownRemark(fields: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = ({style}) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"boom.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img style={style} fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport {map} from \"lodash\"\nimport Image from \"./image\"\n\nconst Header = ({ siteTitle, siteDescription, topics }) => (\n  <div\n    style={{\n      minWidth: `20%`,\n      maxWidth: `25%`,\n      /* borderRight: `2px dotted hsla(0.9, 50%, 50%, 0.3)`, */\n      display: `flex`,\n      flexDirection: `column`,\n      alignItems: `center`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        padding: `1.45rem 1.0875rem`,\n        display: `flex`,\n        flexDirection: `column`,\n        alignItems: `center`\n      }}\n    >\n      <Image style={{width: 170}}/>\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `hsla(305, 100%, 80%, .5)`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n    <div\n      style={{\n        width: `100%`,\n        padding: `1rem 2rem`,\n        display: `flex`,\n        flexDirection: `column`,\n        fontSize: `0.9em`,\n      }}\n    >\n      <div\n        style={{\n          margin: `1rem 0rem`,\n        }}\n      >\n        {siteDescription}\n      </div>\n      <div\n        style={{\n          margin: `1rem 0rem`,\n        }}\n      >\n        {\n          map(\n            topics,\n            (v, k) => (\n              <div>{k}({v})</div>\n            )\n          )\n        }\n      </div>\n    </div>\n\n     <footer style={{marginTop: `auto`}}>\n      <a style={{textDecoration: `none`, fontSize: `0.8em`}}\n         href=\"https://polygon.pizza\">polygon ♥ pizza\n      </a>\n    </footer>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  siteDescription: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  siteDescription: `...`,\n}\n\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport {reduce} from 'lodash'\n\nimport Header from \"./header\"\nimport SEO from \"./seo\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n        allMarkdownRemark(limit: 2000) {\n          group(field: frontmatter___tags) {\n            fieldValue\n            totalCount\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"content\">\n        <SEO title=\"p_p\" keywords={[`music`, `programming`, `nonsense`]} />\n        <Header\n          siteTitle={data.site.siteMetadata.title}\n          siteDescription={data.site.siteMetadata.description}\n           topics={reduce(data.allMarkdownRemark.group, (acc, v) => ({...acc, [v.fieldValue]: v.totalCount}), {})}\n        />\n        <div\n          style={{\n            padding: `1rem 1rem`,\n            width: `100%`,\n          }}\n        >\n          {children}\n        </div>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}